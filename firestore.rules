rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can read and write their own user document.
    // Admins can read any user document.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Authenticated users can create appointments.
    // Users can read, update, or delete their own appointments.
    // Admins have full access to all appointments.
    match /appointments/{appointmentId} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && (request.auth.uid == resource.data.userId || isAdmin());
    }

    // All authenticated users can read services.
    // Only admins can create, update, or delete services.
    match /services/{serviceId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}
